/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as SearchRouteImport } from './routes/search'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as DiscoverRouteImport } from './routes/discover'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersUsernameRouteImport } from './routes/users.$username'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const DiscoverRoute = DiscoverRouteImport.update({
  id: '/discover',
  path: '/discover',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersUsernameRoute = UsersUsernameRouteImport.update({
  id: '/users/$username',
  path: '/users/$username',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/discover': typeof DiscoverRoute
  '/onboarding': typeof OnboardingRoute
  '/profile': typeof ProfileRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/users/$username': typeof UsersUsernameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/discover': typeof DiscoverRoute
  '/onboarding': typeof OnboardingRoute
  '/profile': typeof ProfileRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/users/$username': typeof UsersUsernameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/discover': typeof DiscoverRoute
  '/onboarding': typeof OnboardingRoute
  '/profile': typeof ProfileRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/users/$username': typeof UsersUsernameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/discover'
    | '/onboarding'
    | '/profile'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/users/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/discover'
    | '/onboarding'
    | '/profile'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/users/$username'
  id:
    | '__root__'
    | '/'
    | '/discover'
    | '/onboarding'
    | '/profile'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/users/$username'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DiscoverRoute: typeof DiscoverRoute
  OnboardingRoute: typeof OnboardingRoute
  ProfileRoute: typeof ProfileRoute
  SearchRoute: typeof SearchRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  UsersUsernameRoute: typeof UsersUsernameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/discover': {
      id: '/discover'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof DiscoverRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$username': {
      id: '/users/$username'
      path: '/users/$username'
      fullPath: '/users/$username'
      preLoaderRoute: typeof UsersUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DiscoverRoute: DiscoverRoute,
  OnboardingRoute: OnboardingRoute,
  ProfileRoute: ProfileRoute,
  SearchRoute: SearchRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  UsersUsernameRoute: UsersUsernameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
